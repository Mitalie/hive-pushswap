1 from
    topleft     0
    topright    1   pa
    bottomleft  1   rra
    bottomright 2   rrb pa 
2 from
    topleft     1   sa?
    topright    3   sb? pa pa
    bottomleft  3   rra rra sa?
    bottomright 4   rrb (pa rrb) pa
3 from
    topleft     5   sa? ra sa? rra sa?
    topright    6   split2 (4: 2 tl, 1 bl), sa? rra
    bottomleft  6   split2 (4: 2 tl, 1 tr), sa? pa
    bottomright 7   split2 (5: 2 tl, 1 tr), sa? pa
4 from
    topleft     9   split2 (4: 2 bl, 2 tr), rra rra s? pa pa
    topright    8   split3 (5: 2 tl, 1 bl, 1 br), sa? rrr pa
    bottomleft  9   split2 (6: 2 tl, 2 tr), s? pa pa
    bottomright 9   split2 (6: 2 tl, 2 tr), s? pa pa
5 from
    topleft     12? 13: split3(7: 2 bl, 2 br, 1 tr) rrr rrr s? pa pa pa
    topright    10? 11: split3(6: 2 tl, 1 bl, 2 br) sa? rrr (pa rrb) pa
    bottomleft  13? 14: split3(9: 2 tl, 2 tr, 1 br) s? pa pa rrb pa
    bottomright 13  split3(9: 2 tl, 2 tr, 1 bl) s? pa pa rra
6 from
    topleft     15? 16: split3(8: 2 bl, 2 tr, 2 br) sb? pa pa rrr rrr s? pa pa
    topright    13? 14: split3(8: 2 tl, 2 bl, 2 br) sa? rrr rrr s? pa pa
    bottomleft  16? 17: split2(9: 3 tl, 3 tr) s? rr s? rrr s? pa pa pa
    bottomright 16? 17: split2(9: 3 tl, 3 tr) s? rr s? rrr s? pa pa pa
7 from
    topleft     18? 20: split3(9: 2 bl, 2 br, 3 tr) sort(6: 3 tr) rrr rrr s? pa pa
    topright    16? 19: split3(9: 3 tl, 2 bl, 2 br) sort(5: 3 tl) rrr rrr s? pa pa
    bottomleft  20? 24: split2(12: 2 tl, 5 tr) sort(1: 2 tl) sort(11: 5 tr)
    bottomright 19? 21: split2(9: 2 tl, 5 tr) sort(1: 2 tl) sort(11: 5 tr)
8 from
    topleft     21?
    topright    19?
    bottomleft  24?
    bottomright 23?
9 from
    topleft     24?
    topright    21?
    bottomleft  27?
    bottomright 26?

sort(k0,abc) = split(k1,a) + split(k2,b) + split(k3,c) + sort(k1,a) + sort(k2,b) + sort(k3,c) where c=abc-a-b
select a, b that minimize cost? (n+1)(n+2)/2 choices

sort2(k0,ab) = split(k1,a) + split(k2,b)               + sort(k1,a) + sort(k2,b)              where b=ab-a
select a that minimizes cost? n+1 choices

sort(k0,abc) = sort2(k0,ab)              + split(k3,c)                           + sort(k3,c) where c=abc-ab
select ab that minimizes cost? n+1 choices
